import telebot
import sqlite3
from telebot import types
from time import sleep






registration = False
docs = False
full_name = None
snils = None

bot = telebot.TeleBot('7006292589:AAFikVQR1SSuXX5RsHxmWrYba3tgpHc265M')







@bot.message_handler(commands = ['start'])
def start(message):
    if registration == False:
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç Abit-SFU, —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ç–≤–æ—é –ø–æ–∑–∏—Ü–∏—é –≤ —Å–ø–∏—Å–∫–∞—Ö –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤ –°–§–£.")
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("üìç –ú–µ—Å—Ç–æ –≤ —Å–ø–∏—Å–∫–µ –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤", callback_data='place'))
        markup.add(types.InlineKeyboardButton("üìù –ü–æ–¥–∞—Ç—å –∞—Ç—Ç–µ—Å—Ç–∞—Ç", callback_data='docs'))
        markup.add(types.InlineKeyboardButton("‚öô –ê–ò–° –ê–±–∏—Ç—É—Ä–∏–µ–Ω—Ç", url='https://abiturient.sfu-kras.ru'))
        markup.add(types.InlineKeyboardButton("üêø –ì—Ä—É–ø–ø–∞ –≤ –í–ö", url='https://vk.com/dovuz_sfu?from=search'))
        bot.send_message(message.chat.id, "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é!\n\n –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–≤–æ–µ –º–µ—Å—Ç–æ –≤ —Å–ø–∏—Å–∫–∞—Ö –ø–æ—Å—Ç—É–ø–∞—é—â–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ <b>–ú–µ—Å—Ç–æ –≤ —Å–ø–∏—Å–∫–µ –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤</b>\n\n –ï—Å–ª–∏ –≤—ã –ø–æ–¥–∞–ª–∏ –∞—Ç—Ç–µ—Å—Ç–∞—Ç –≤ –°–§–£, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ <b>–ü–æ–¥–∞—Ç—å –∞—Ç—Ç–µ—Å—Ç–∞—Ç</b>\n\n –ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –ê–ò–° –ê–±–∏—Ç—É—Ä–∏–µ–Ω—Ç, –Ω–∞–∂–º–∏—Ç–µ <b>–ê–ò–° –ê–±–∏—Ç—É—Ä–∏–µ–Ω—Ç</b>\n\n –ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –≥—Ä—É–ø–ø—É –≤ –í–ö, –Ω–∞–∂–º–∏—Ç–µ <b>–ì—Ä—É–ø–ø–∞ –≤ –í–ö</b>\n\n", reply_markup=markup, parse_mode='html')












# def main(message):
#     markup = types.InlineKeyboardMarkup()
#     markup.add(types.InlineKeyboardButton("–ó–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"))
#
#
#     # bot.reply_to(message,"–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç Abit-SFU, —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ç–≤–æ—é –ø–æ–∑–∏—Ü–∏—é –≤ —Å–ø–∏—Å–∫–∞—Ö –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤ –°–§–£, –Ω–∞—á–Ω—ë–º —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏! –í–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –≤–≤–µ—Å—Ç–∏ —Å–≤–æ–∏ –§–ò–û –∏ –Ω–æ–º–µ—Ä –°–ù–ò–õ–°",reply_markup=markup)
#     bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç Abit-SFU, —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Ç–≤–æ—é –ø–æ–∑–∏—Ü–∏—é –≤ —Å–ø–∏—Å–∫–∞—Ö –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤ –°–§–£, –Ω–∞—á–Ω—ë–º —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏! –í–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –≤–≤–µ—Å—Ç–∏ —Å–≤–æ–∏ –§–ò–û –∏ –Ω–æ–º–µ—Ä –°–ù–ò–õ–°", reply_markup=markup)
#     bot.register_next_step_handler(message,reg1)

# def reg1(message):
#     if message.text == "–ó–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è":
#         bot.send_message(message.chat.id,"–í–≤–µ–¥–∏—Ç–µ –§–ò–û")
#     bot.register_next_step_handler(message, reg2)
#
# def reg2(message):
#     global full_name
#     full_name = message.text.strip()
#     bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –°–ù–ò–õ–°")
#     bot.register_next_step_handler(message, reg3)
#
#
#
# def reg3(message): #–∫–Ω–æ–ø–∫–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
#     global snils
#     snils = message.text.strip()
#     markup = types.ReplyKeyboardMarkup()
#     markup.add(types.KeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
#     bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ,–≤—ã –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã, –æ—Ç–∫—Ä–æ–π—Ç–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",reply_markup=markup)
#     bot.register_next_step_handler(message, reg4)
#
#
#
#     connection = sqlite3.connect("Users.db")  # –∑–∞–ø–∏—Å—å –≤ –±–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–π
#     curse = connection.cursor()
#     userNote = [full_name, snils]
#     curse.execute("INSERT OR IGNORE INTO Users  VALUES (?,?)", userNote)
#
#     connection.commit()
#
#     curse.close
#     connection.close
# def reg4(message): #–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
#     markup = types.InlineKeyboardMarkup()
#     markup.add(types.InlineKeyboardButton("–ú–µ—Å—Ç–æ –≤ —Å–ø–∏—Å–∫–µ –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤",callback_data="place"))
#     markup.add(types.InlineKeyboardButton("–ü–æ–¥–∞—Ç—å –∞—Ç—Ç–µ—Å—Ç–∞—Ç", callback_data="docs"))
#     markup.add(types.InlineKeyboardButton("–ê–ò–° –ê–±–∏—Ç—É—Ä–∏–µ–Ω—Ç", url="https://abiturient.sfu-kras.ru"))
#     markup.add(types.InlineKeyboardButton("–ì—Ä—É–ø–ø–∞ –≤ –í–ö",url="https://vk.com/dovuz_sfu?from=search"))
#     if message.text == "–û—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
#         bot.send_message(message.chat.id, "–¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –æ–¥–Ω–æ–π –∏–∑ —Ñ—É–Ω–∫—Ü–∏–π", reply_markup=markup)

@bot.message_handler()
def menu(message):
    if message.text.lower() == '–æ—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("üìç –ú–µ—Å—Ç–æ –≤ —Å–ø–∏—Å–∫–µ –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤", callback_data='place'))
        markup.add(types.InlineKeyboardButton("üìù –ü–æ–¥–∞—Ç—å –∞—Ç—Ç–µ—Å—Ç–∞—Ç", callback_data='docs'))
        markup.add(types.InlineKeyboardButton("‚öô –ê–ò–° –ê–±–∏—Ç—É—Ä–∏–µ–Ω—Ç", url='https://abiturient.sfu-kras.ru'))
        markup.add(types.InlineKeyboardButton("üêø –ì—Ä—É–ø–ø–∞ –≤ –í–ö", url='https://vk.com/dovuz_sfu?from=search'))
        bot.send_message(message.chat.id,
                         "–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é!\n\n –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–≤–æ–µ –º–µ—Å—Ç–æ –≤ —Å–ø–∏—Å–∫–∞—Ö –ø–æ—Å—Ç—É–ø–∞—é—â–∏—Ö, –Ω–∞–∂–º–∏—Ç–µ <b>–ú–µ—Å—Ç–æ –≤ —Å–ø–∏—Å–∫–µ –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤</b>\n\n –ï—Å–ª–∏ –≤—ã –ø–æ–¥–∞–ª–∏ –∞—Ç—Ç–µ—Å—Ç–∞—Ç –≤ –°–§–£, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ <b>–ü–æ–¥–∞—Ç—å –∞—Ç—Ç–µ—Å—Ç–∞—Ç</b>\n\n –ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –ê–ò–° –ê–±–∏—Ç—É—Ä–∏–µ–Ω—Ç, –Ω–∞–∂–º–∏—Ç–µ <b>–ê–ò–° –ê–±–∏—Ç—É—Ä–∏–µ–Ω—Ç</b>\n\n –ß—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –≥—Ä—É–ø–ø—É –≤ –í–ö, –Ω–∞–∂–º–∏—Ç–µ <b>–ì—Ä—É–ø–ø–∞ –≤ –í–ö</b>\n\n",
                         reply_markup=markup, parse_mode='html')


@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    global docs
    if callback.data == 'docs':
        if docs == True:
            docs = False
            bot.send_message(callback.message.chat.id, '<b>–ü–æ–∑–∏—Ü–∏—è –∞—Ç—Ç–µ—Å—Ç–∞—Ç–∞:</b> –ê—Ç—Ç–µ—Å—Ç–∞—Ç –Ω–µ –ø–æ–¥–∞–Ω!', parse_mode='html')
        else:
            docs = True
            bot.send_message(callback.message.chat.id, '<b>–ü–æ–∑–∏—Ü–∏—è –∞—Ç—Ç–µ—Å—Ç–∞—Ç–∞:</b> –ê—Ç—Ç–µ—Å—Ç–∞—Ç –ø–æ–¥–∞–Ω!', parse_mode='html')


    elif callback.data == 'place':
        global full_name
        global snils
        place = 0
        if docs == False:
            connection = sqlite3.connect('applicants_of_AppInformatics.db')
            cursor = connection.cursor()
            cursor.execute("""SELECT full_name, snils, exam_scores
                             FROM Applied_Informatics
                             ORDER BY exam_scores
                             DESC""")
            connection.commit()
            for rec in cursor:
                place += 1
                if str(rec[0]) == str(full_name):
                    if str(rec[1]) == str(snils):
                        bot.send_message(callback.message.chat.id, f'–¢–≤–æ—ë –º–µ—Å—Ç–æ –≤ —Å–ø–∏—Å–∫–µ: {place}')




















while True:
    try:
        bot.polling(none_stop=True)
    except Exception as _ex:
        print(_ex)
        sleep(15)

"""bot.polling(none_stop = True)"""